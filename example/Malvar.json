{"lines":[{"page":1,"text":"HIGH-QUALITY LINEAR INTERPOLATION","rect":[159.239990234375,105.89640808105469,445.473534034729,93.90156555175781]},{"page":1,"text":"FOR DEMOSAICING OF BAYER-PATTERNED COLOR IMAGES","rect":[96.12028503417969,119.97007751464844,508.6465369720459,110.28193664550781]},{"page":1,"text":"Henrique S. Malvar, Li-wei He, and Ross Cutler","rect":[185.9399871826172,148.53598022460938,418.7867438964844,137.6519775390625]},{"page":1,"text":"Microsoft Research","rect":[255.17999267578126,166.05596923828126,349.6416015625,157.57196044921876]},{"page":1,"text":"One Microsoft Way, Redmond, WA 98052, USA","rect":[183.71998596191407,182.4600067138672,421.03918310546876,171.552001953125]},{"page":1,"text":"ABSTRACT","rect":[141.5399932861328,226.29031372070313,196.12695907974243,219.35647583007813]},{"page":1,"text":"This  paper  introduces  a  new  interpolation  technique  for  demo-","rect":[54.0,247.01698303222657,290.88094165039066,238.85397338867188]},{"page":1,"text":"saicing of color images produced by single-CCD digital cameras.","rect":[54.0,258.01495361328127,290.9187316894531,249.83395385742188]},{"page":1,"text":"We  show  that  the  proposed  simple  linear  filter  can  lead  to  an","rect":[54.0,268.97698974609377,290.87188720703127,260.8139953613281]},{"page":1,"text":"improvement in PSNR of over 5.5 dB when compared to bilinear","rect":[54.0,279.95697021484377,290.88811328125,271.7939758300781]},{"page":1,"text":"demosaicing, and about 0.7 dB improvement in R and B interpo-","rect":[54.0,290.9549865722656,290.86556079101566,282.77398681640627]},{"page":1,"text":"lation when compared to a recently introduced linear interpola-","rect":[54.0,301.9349670410156,290.92684008789066,293.75396728515627]},{"page":1,"text":"tor. The proposed filter also outperforms most nonlinear demo-","rect":[54.0,312.89697265625,290.87987353515629,304.7339782714844]},{"page":1,"text":"saicing algorithms, without the artifacts due to nonlinear process-","rect":[54.0,323.8949890136719,290.85643603515629,315.7139892578125]},{"page":1,"text":"ing, and a much reduced computational complexity.","rect":[54.0,334.875,241.7156524658203,326.6940002441406]},{"page":1,"text":"1. INTRODUCTION","rect":[126.9000015258789,360.87030029296877,217.97078371429445,353.93646240234377]},{"page":1,"text":"Digital cameras are quite popular today; many users are switch-","rect":[54.0,381.6150207519531,290.88622119140629,373.43402099609377]},{"page":1,"text":"ing  away  from  regular  film  photography.  For  cost  reduction,","rect":[54.0,392.59503173828127,290.8639221191406,384.4140319824219]},{"page":1,"text":"most digital cameras use a single charge-coupled device (CCD)","rect":[54.0,403.57501220703127,290.8979704589844,395.3940124511719]},{"page":1,"text":"sensor,  with  the  CCD  pixels  preceded  in  the  optical  path  by a","rect":[54.0,414.5550231933594,290.9351174316406,406.3740234375]},{"page":1,"text":"color filter array (CFA) in a Bayer mosaic pattern, as shown in","rect":[54.0,425.5350341796875,290.8980712890625,417.3540344238281]},{"page":1,"text":"Fig. 1. For each 2×2 set of pixels, two diagonally opposed pixels","rect":[54.0,436.5150146484375,290.9034047851562,428.3340148925781]},{"page":1,"text":"have  green  filters,  and  the  other  two  have  red  and  blue  filters.","rect":[54.0,447.4950256347656,290.906005859375,439.31402587890627]},{"page":1,"text":"Since G carries most of the luminance information for humans,","rect":[54.0,457.0,290.86834716796877,450.2940368652344]},{"page":1,"text":"its sampling rate is twice that of R and B.","rect":[54.0,469.45501708984377,203.58447265625,461.2740173339844]},{"page":1,"text":"We call demosaicing the problem of interpolating back the","rect":[72.0,480.4350280761719,290.9177529296875,472.2540283203125]},{"page":1,"text":"image captured with a CFA, so that for every CCD pixel we can","rect":[54.0,491.4150390625,290.9248962402344,483.2340393066406]},{"page":1,"text":"associate  a  full  RGB  value.  The  simplest  approach  to  demo-","rect":[54.0,502.37701416015627,290.93855883789066,494.2140197753906]},{"page":1,"text":"saicing  is  bilinear  interpolation  [1]–0,  in  which  the  three  color","rect":[54.0,513.3750610351563,290.8782255859375,505.1940612792969]},{"page":1,"text":"planes  are  independently  interpolated  using  symmetric  bilinear","rect":[54.0,524.3550415039063,290.9105437011719,516.174072265625]},{"page":1,"text":"interpolation  from  the  nearest  neighbors  of  the  same  color.  As","rect":[54.0,535.3350219726563,290.8504873046875,527.154052734375]},{"page":1,"text":"expected,  bilinear  interpolation  generates  significant  artifacts,","rect":[54.0,546.3150024414063,290.8944091796875,538.134033203125]},{"page":1,"text":"especially across edges and other high-frequency content, since it","rect":[54.0,557.2950439453125,290.90879931640628,549.1140747070313]},{"page":1,"text":"doesn’t take into account the correlation among the RGB values.","rect":[54.0,568.2750244140625,290.89892578125,560.0940551757813]},{"page":1,"text":"Practical  demosaicing  algorithms  take  such  correlation  into  ac-","rect":[54.0,579.2550048828125,290.89452197265629,571.0740356445313]},{"page":1,"text":"Figure 1. Typical Bayer mosaic for color image cap-","rect":[72.0,679.1578979492188,271.6843653821945,670.96435546875]},{"page":1,"text":"ture  in  single-CCD  digital  cameras;  the G subimage","rect":[71.99983215332031,689.717529296875,271.70421487808229,681.5239868164063]},{"page":1,"text":"has twice as many pixels as the R and B subimages.","rect":[71.99983215332031,700.2772216796875,259.33725142478945,692.0836791992188]},{"page":1,"text":"count, either with better linear filters [4], or with nonlinear filters","rect":[313.91998291015627,227.14173889160157,550.8026967773437,219.11373901367188]},{"page":1,"text":"that adapt interpolation smoothness to a measure of image activ-","rect":[313.91998291015627,238.27471923828126,550.8945830078125,230.09371948242188]},{"page":1,"text":"ity or edginess [1]–0.","rect":[313.91998291015627,249.25469970703126,390.67828369140627,241.07369995117188]},{"page":1,"text":"In this paper we present a simple linear demosaicing filter,","rect":[331.91998291015627,260.23468017578127,550.8269653320313,252.05368041992188]},{"page":1,"text":"with  better  performance  and  lower  complexity  than  that  in  [4].","rect":[313.91998291015627,271.2147216796875,550.7936401367188,263.0337219238281]},{"page":1,"text":"Our  filter  also  outperforms  many  nonlinear  algorithms.  In  Sec-","rect":[313.91998291015627,282.1947021484375,550.7917387695312,274.0137023925781]},{"page":1,"text":"tion  2  we  quickly  review  some  of  the  techniques  proposed  for","rect":[313.91998291015627,293.1747131347656,550.8037016601562,284.99371337890627]},{"page":1,"text":"improved demosaicing performance, and in Section 3 we present","rect":[313.91998291015627,304.15472412109377,550.79643359375,295.9737243652344]},{"page":1,"text":"our new linear filter. Performance comparisons and conclusions","rect":[313.91998291015627,315.11669921875,550.7845693359375,306.9537048339844]},{"page":1,"text":"are presented in Sections 4 and 5, respectively.","rect":[313.91998291015627,326.1147155761719,483.3585510253906,317.9337158203125]},{"page":1,"text":"2. BEYOND BILINEAR DEMOSAICING","rect":[341.1000061035156,352.11029052734377,523.5611853561402,345.16644287109377]},{"page":1,"text":"Referring to Fig. 1, in bilinear demosaicing the green value g(i,j)","rect":[313.91998291015627,372.8550109863281,550.7963774414062,364.67401123046877]},{"page":1,"text":"at a pixel position (i,j) that falls in a red or blue pixel, is com-","rect":[313.9190979003906,383.83502197265627,550.7783720703125,375.6540222167969]},{"page":1,"text":"puted by the average of the neighboring green values in a cross","rect":[313.9190673828125,394.81500244140627,550.8359609375,386.6340026855469]},{"page":1,"text":"pattern:","rect":[313.9190673828125,405.7770080566406,341.51487841796878,398.5140075683594]},{"page":1,"text":"1","rect":[409.91998291015627,429.239990234375,414.4268832206726,423.14666748046877]},{"page":1,"text":"gˆ(i, j)=","rect":[372.2400207519531,436.9379577636719,400.9995602989197,428.4864501953125]},{"page":1,"text":"∑ g(i + m, j + n)  ","rect":[420.2400207519531,438.43853759765627,497.19333052635195,426.9325256347656]},{"page":1,"text":"4","rect":[410.03985595703127,442.1396484375,414.5467562675476,436.04632568359377]},{"page":1,"text":"(m,n)={(0,−1), (0,1), (−1,0), (1,0)}","rect":[403.1400146484375,454.8925476074219,493.5804839324951,449.17413330078127]},{"page":1,"text":"which  corresponds  to  estimating the  green  value  at  the  pixel","rect":[313.92022705078127,477.79803466796877,550.8452530765534,469.6044921875]},{"page":1,"text":"marked ‘+’ in Fig. 1 as the average of the observed green values","rect":[313.92022705078127,488.7777404785156,550.8517663908004,480.5841979980469]},{"page":1,"text":"marked ‘·’. At image boundaries, only pixels that fall within the","rect":[313.92022705078127,499.75787353515627,550.8176792335511,491.56390380859377]},{"page":1,"text":"image  are  included,  and  the  scaling  adjusted.  For  the  R  and B","rect":[313.92059326171877,510.7375793457031,550.7888773775101,502.5350341796875]},{"page":1,"text":"colors the same equation applies (with a diagonal cross pattern),","rect":[313.92059326171877,521.71728515625,550.7951982021332,513.5237426757813]},{"page":1,"text":"except that for pixel positions (i,j) that fall in a green pixel only","rect":[313.92059326171877,532.697021484375,550.7077059745789,524.5034790039063]},{"page":1,"text":"two red neighboring values are averaged to produce an interpo-","rect":[313.92059326171877,543.6767578125,550.8158656263352,535.4832153320313]},{"page":1,"text":"lated  red  value;  the  same  holds  for  blue.  Besides  the  computa-","rect":[313.92059326171877,554.638427734375,550.8321009778977,546.4629516601563]},{"page":1,"text":"tional simplicity of (1), its output value is guaranteed to have the","rect":[313.92059326171877,565.6361694335938,550.8536899757386,557.442626953125]},{"page":1,"text":"same dynamic range of the input value, so no overflow logic is","rect":[313.92059326171877,576.6158447265625,550.8050744962692,568.4223022460938]},{"page":1,"text":"needed on the output value.","rect":[313.92059326171877,587.5775146484375,413.55014204978945,579.4020385742188]},{"page":1,"text":"Exploiting the correlation among the RGB channels is the","rect":[331.9202575683594,598.5753173828125,550.8275669288636,590.3817749023438]},{"page":1,"text":"main idea for improving demosaicing performance. Specifically,","rect":[313.92059326171877,609.5549926757813,550.8024003505707,601.3614501953125]},{"page":1,"text":"we can assume that in a luminance/chrominance decomposition,","rect":[313.92059326171877,620.5166625976563,550.8067338466644,612.3411865234375]},{"page":1,"text":"the chrominance components don’t vary much across pixels. In","rect":[313.92059326171877,631.514404296875,550.8421664237976,623.3208618164063]},{"page":1,"text":"the constant-hue approach of Freeman [2],[5], the green channel","rect":[313.92059326171877,642.494140625,550.8376847171784,634.3005981445313]},{"page":1,"text":"is bilinearly interpolated, and then the R and B channels are in-","rect":[313.92059326171877,653.4738159179688,550.8077479505539,645.2802734375]},{"page":1,"text":"terpolated such as to maintain a constant hue, defined as the R/G","rect":[313.92059326171877,664.4354858398438,550.8086232280731,656.260009765625]},{"page":1,"text":"and  B/G  ratios.  Even  at  the  expense  of  computing  those  divi-","rect":[313.92059326171877,675.4332275390625,550.8376551771164,667.2396850585938]},{"page":1,"text":"sions, it still produces visible artifacts [2]. Better results can be","rect":[313.92059326171877,686.3948974609375,550.7708652687073,678.2194213867188]},{"page":1,"text":"obtained  by  starting  with  bilinearly interpolated G pixels, and","rect":[313.92059326171877,697.3927001953125,550.7239413261414,689.1991577148438]},{"page":2,"text":"applying  median  filters to the interpolated values of the color","rect":[54.0,82.75785064697266,290.8989039564133,74.5643081665039]},{"page":2,"text":"differences R – G and B – G [2].","rect":[54.0,93.5843505859375,171.94918990135194,85.5440444946289]},{"page":2,"text":"Improved performance can be obtained with gradient-based","rect":[71.99966430664063,104.7172622680664,290.87457609176638,96.52371978759766]},{"page":2,"text":"methods  [2],[6],  which  typically  estimate  edge  directions  and","rect":[53.999107360839847,115.6969985961914,290.8925814628601,107.50345611572266]},{"page":2,"text":"adjust  the  interpolation  formulas  so  that  filtering  is  performed","rect":[53.999107360839847,126.67667388916016,290.9305148124695,118.47411346435547]},{"page":2,"text":"preferentially  along  edge  directions,  and  not  across  them.    For","rect":[53.999107360839847,137.6564178466797,290.93769179821018,129.46286010742188]},{"page":2,"text":"example,  for  interpolating  the  green  channel  in  Laroche  and","rect":[53.999107360839847,148.63609313964845,290.8943819999695,140.44253540039063]},{"page":2,"text":"Prescott’s method, the R and B channels are used to determine","rect":[53.999107360839847,158.0,290.92052347183229,151.42227172851563]},{"page":2,"text":"edge directions, which determine unequal weights to the terms in","rect":[53.999107360839847,170.59556579589845,290.85748624801638,162.40200805664063]},{"page":2,"text":"(1) for the green channel; the color differences R–G and B–G are","rect":[53.999107360839847,181.5752410888672,290.9024875831604,173.38168334960938]},{"page":2,"text":"then interpolated [2],[6]. Hamilton and Adams’ method improves","rect":[53.999107360839847,192.5369415283203,290.8817956876755,184.36141967773438]},{"page":2,"text":"on Laroche and Prescott’s by considering both first- and second-","rect":[53.999107360839847,203.53465270996095,290.843178858757,195.34109497070313]},{"page":2,"text":"order  pixel  differences  [6],[7].  Chang,  Cheung,  and  Pang  im-","rect":[53.999107360839847,214.51438903808595,290.8691493177414,206.32083129882813]},{"page":2,"text":"proved on that by considering a variable number of gradients [8].","rect":[53.999107360839847,225.4940643310547,290.8196122646332,217.30050659179688]},{"page":2,"text":"A simpler but efficient algorithm that uses soft decision rules to","rect":[53.999107360839847,236.4738006591797,290.8610873222351,228.28024291992188]},{"page":2,"text":"combine interpolation results from horizontal and vertical direc-","rect":[53.999107360839847,247.43544006347657,290.8483973646164,239.25991821289063]},{"page":2,"text":"tions is presented in [9].","rect":[53.999107360839847,258.4151916503906,140.99398970603944,250.23965454101563]},{"page":2,"text":"Iterative methods can lead to further improvement by using","rect":[71.99876403808594,269.4128723144531,290.8935580253601,261.2193298339844]},{"page":2,"text":"results from B and R interpolation to correct the G interpolation,","rect":[53.999114990234378,280.3746032714844,290.86105513572695,272.1990661621094]},{"page":2,"text":"and vice-versa. That is the basis of Kimmel’s approach 0, where","rect":[53.999114990234378,291.35430908203127,290.885306186676,283.17877197265627]},{"page":2,"text":"the  interpolation  steps  are  based  on  a  combination  of  the  con-","rect":[53.999114990234378,302.3340148925781,290.9069911146164,294.1584777832031]},{"page":2,"text":"stant-hue  and  gradient-based","rect":[53.999114990234378,313.33172607421877,162.88943815231324,305.13818359375]},{"page":2,"text":"methods.  A  technique  based  on","rect":[167.75869750976563,313.313720703125,290.8682589530945,305.13818359375]},{"page":2,"text":"iterative projections is presented in [6]. It has the best perform-","rect":[53.999114990234378,324.3114318847656,290.8709803724289,316.10888671875]},{"page":2,"text":"ance to date on a popular set of standard test images, but it has a","rect":[53.999114990234378,335.2911376953125,290.9232700538635,327.09759521484377]},{"page":2,"text":"very  high  complexity  (as  many  as  480  operations  per  input","rect":[53.999114990234378,346.2708435058594,290.8835831546783,338.0773010253906]},{"page":2,"text":"pixel). So, the method in [6] can be seen as setting performance","rect":[53.999114990234378,357.25054931640627,290.93846780776979,349.0570068359375]},{"page":2,"text":"bounds to what can be achieved with more practical algorithms.","rect":[53.999114990234378,368.2302551269531,284.7325761318207,360.0367126464844]},{"page":2,"text":"3. IMPROVED LINEAR INTERPOLATION","rect":[74.5199966430664,390.2002868652344,270.32584047698978,383.2764587402344]},{"page":2,"text":"It is interesting to note that most of the algorithms discussed in","rect":[54.0,410.9579772949219,290.9069857597351,402.7644348144531]},{"page":2,"text":"the previous section use nonlinear filters whose region of support","rect":[54.0,421.93768310546877,290.91782387733459,413.744140625]},{"page":2,"text":"go  beyond  immediately  adjacent  pixels.  That  raises  a  simple","rect":[54.0,432.9173889160156,290.90074808120729,424.71484375]},{"page":2,"text":"question, which was not addressed in [1]–0,[5]–[9]: what is the","rect":[54.0,443.8791198730469,290.898001499176,435.7035827636719]},{"page":2,"text":"best performance we can get from a linear filter whose region of","rect":[54.0,454.8768310546875,290.8999110364914,446.68328857421877]},{"page":2,"text":"supports extends to, say, a 5×5 pixel region?","rect":[54.0,465.8565368652344,215.00174600601197,457.6629943847656]},{"page":2,"text":"Pei and Tam proposed a good solution along those lines [4],","rect":[71.99966430664063,476.83624267578127,290.84567427635195,468.6427001953125]},{"page":2,"text":"by first estimating R and G via bilinear interpolation, then esti-","rect":[54.0,487.8159484863281,290.8889247083664,479.6224060058594]},{"page":2,"text":"mating  the  color  differences  B  –  G  and  R  –  G  form  those,","rect":[54.0,498.7956848144531,290.8376786708832,490.6021423339844]},{"page":2,"text":"smoothing the color differences via 4-point averages (under the","rect":[54.0,509.7753601074219,290.89891702651979,501.5818176269531]},{"page":2,"text":"assumption  that  the  color  differences  are  slowly-varying),  and","rect":[54.0,520.755126953125,290.8917269706726,512.5615844726563]},{"page":2,"text":"finally using those to interpolate the G values and then to do a","rect":[54.0,531.7348022460938,290.9142368507385,523.541259765625]},{"page":2,"text":"final estimate of the R and B values. Their unrolled interpolation","rect":[54.0,542.6964721679688,290.86554288864138,534.52099609375]},{"page":2,"text":"equations are equivalent to linear filters operating on a 5x5 pixel","rect":[54.0,553.6942138671875,290.86911782264709,545.5006713867188]},{"page":2,"text":"window around the current pixel [4].","rect":[54.0,564.6558837890625,186.8534562587738,556.4804077148438]},{"page":2,"text":"3.1 The Proposed Interpolation Method","rect":[54.0,587.3968505859375,206.40063696289062,579.3778686523438]},{"page":2,"text":"Instead of using a constant or near-constant hue approach like the","rect":[54.0,604.218017578125,290.97103006362917,596.0244750976563]},{"page":2,"text":"methods  described  above,  we  propose  the  use  of  the  following","rect":[54.0,615.1976928710938,290.96905851364138,607.004150390625]},{"page":2,"text":"criterion: edges have much stronger luminance than chrominance","rect":[54.0,626.1774291992188,290.93050271987917,617.98388671875]},{"page":2,"text":"components.  Thus,  when  we  look  at  interpolation  of  a  green","rect":[54.0,637.1571044921875,290.91070890426638,628.9635620117188]},{"page":2,"text":"value at a red pixel location, for example, we don’t discard the","rect":[54.0,648.1187744140625,290.9135044288635,639.9432983398438]},{"page":2,"text":"red value at that location – it is valuable information! Rather, we","rect":[54.0,657.2957763671875,290.844046421051,650.9230346679688]},{"page":2,"text":"compare that red value to its estimate for a bilinear interpolation","rect":[54.0,670.0781860351563,290.896213054657,661.9027099609375]},{"page":2,"text":"for the nearest red samples. If it is different from that estimate, it","rect":[54.0,681.0579223632813,290.92597207069397,672.8824462890625]},{"page":2,"text":"probably means there’s a sharp luminance change at that pixel,","rect":[54.0,692.0556640625,290.8888261318207,683.8621215820313]},{"page":2,"text":"and thus we correct a bilinearly interpolated green value by add-","rect":[313.9201354980469,82.7552261352539,550.8272792005539,74.56168365478516]},{"page":2,"text":"ing a portion of this estimated luminance change.","rect":[313.9201354980469,93.7349624633789,491.97604537010195,85.54141998291016]},{"page":2,"text":"Specifically,  to  interpolate  G  values  at  an  R  location,  for","rect":[331.9197692871094,104.7146987915039,550.8027430677414,96.52115631103516]},{"page":2,"text":"example (the ‘+’ pixel in Fig. 1), we use the formula","rect":[313.92010498046877,115.6944351196289,503.6813266944885,107.50089263916016]},{"page":2,"text":"where ∆R(i,j) is the gradient of R at that location, computed by","rect":[313.9200744628906,156.6179656982422,539.7644686698914,148.42440795898438]},{"page":2,"text":"                                             (m,n)={(0,−2), (0,2), (−2,0), (2,0)}","rect":[350.5799865722656,191.42755126953126,515.2339335632324,185.73004150390626]},{"page":2,"text":"The subscript B in (2) means bilinearly interpolated, as in (1). So,","rect":[313.9200439453125,211.5778045654297,550.8703935146332,203.38424682617188]},{"page":2,"text":"we correct the bilinear interpolation estimate by a measure of the","rect":[313.9200439453125,222.55747985839845,550.8370273780823,214.36392211914063]},{"page":2,"text":"gradient ∆R for the known color at the pixel location, which is","rect":[313.9200439453125,233.53721618652345,550.8207605314254,225.34365844726563]},{"page":2,"text":"estimated by the simple formula in (3). The gain factor α con-","rect":[313.9200439453125,244.51768493652345,550.7951136732102,236.32412719726563]},{"page":2,"text":"trols the intensity of such correction.","rect":[313.91961669921877,255.49766540527345,446.5243241786957,247.30410766601563]},{"page":2,"text":"Thus, our method is in fact a gradient-corrected bilinear in-","rect":[331.91925048828127,266.4773254394531,550.8239222669602,258.2837829589844]},{"page":2,"text":"terpolated approach, with a gain parameter to control how much","rect":[313.91961669921877,277.4570617675781,550.8690829277039,269.2635192871094]},{"page":2,"text":"correction is applied. For interpolating G at blue pixels, the same","rect":[313.91961669921877,288.436767578125,550.7978428077698,280.24322509765627]},{"page":2,"text":"formula is used, but corrected by ∆B(i,j). For interpolating R at","rect":[313.91961669921877,299.41796875,550.7656021976471,291.2229309082031]},{"page":2,"text":"green pixels, we use the formula","rect":[313.91986083984377,310.3976745605469,431.3200901222229,302.2041320800781]},{"page":2,"text":"rˆ(i, j) = rˆB(i, j) + β ∆G(i, j)  ","rect":[383.2799987792969,330.0340270996094,485.67343306541445,321.1088562011719]},{"page":2,"text":"with ∆G(i,j) determined by a 9-point region, as shown in Fig. 2.","rect":[313.91998291015627,351.3179626464844,550.8155229091644,343.1244201660156]},{"page":2,"text":"For interpolating R at blue pixels, we use the formula","rect":[313.92022705078127,362.29766845703127,507.09227640151979,354.1041259765625]},{"page":2,"text":"with ∆B(i,j) computed on a 5-point region, also shown in Fig. 2.","rect":[313.9199523925781,403.21795654296877,550.7912919521332,395.0244140625]},{"page":2,"text":"The formulas for interpolating B are similar, by symmetry.","rect":[313.9203186035156,414.1976623535156,526.7317216396332,406.0041198730469]},{"page":2,"text":"3.2 Gradient-Correction Gains","rect":[313.91998291015627,435.135009765625,432.377953125,428.89801025390627]},{"page":2,"text":"To determine appropriate values for the gain parameters {α,β,γ},","rect":[313.91998291015627,453.7379455566406,550.7900102138519,445.4639892578125]},{"page":2,"text":"we used a Wiener approach; that is, we computed the values that","rect":[313.919921875,464.69964599609377,550.8378678226471,456.52410888671877]},{"page":2,"text":"led to minimum mean-square error interpolation, given second-","rect":[313.919921875,475.6973571777344,550.7764979505539,467.5038146972656]},{"page":2,"text":"order statistics computed from a good data set (the Kodak image","rect":[313.919921875,486.6770935058594,550.8179844093323,478.4835510253906]},{"page":2,"text":"set used in [6]). We then approximated the optimal Wiener coef-","rect":[313.919921875,497.6387939453125,550.8458949232102,489.4632568359375]},{"page":2,"text":"ficients  by  integer  multiples  of  small  powers  of  1/2,  with  the","rect":[313.919921875,508.6365051269531,550.7629917335511,500.4429626464844]},{"page":2,"text":"final result α = 1/2, β = 5/8, and γ = 3/4. From the values of ","rect":[313.919921875,519.6149291992188,553.0925004482269,511.34393310546877]},{"page":2,"text":"{α,β,γ} we can compute the equivalent linear FIR filter coeffi-","rect":[313.9202880859375,530.597900390625,550.8060389661789,522.3239135742188]},{"page":2,"text":"cients for each interpolation case. The resulting coefficient val-","rect":[313.9197692871094,541.57763671875,550.8267909193039,533.3840942382813]},{"page":2,"text":"ues, shown in Fig.2, make the filters quite close (within 5% in","rect":[313.91973876953127,552.5573120117188,550.8204379081726,544.36376953125]},{"page":2,"text":"terms  of  mean-square  error)  to  the  optimal  Wiener  filters  for a","rect":[313.91973876953127,563.5189819335938,550.8088291358948,555.343505859375]},{"page":2,"text":"5×5 region of support.","rect":[313.91973876953127,574.5167236328125,394.6897294521332,566.3231811523438]},{"page":2,"text":"Thus, we believe that the only way to design a practical lin-","rect":[331.9194030761719,585.4964599609375,550.8493128919602,577.3029174804688]},{"page":2,"text":"ear filter with a lower mean-square interpolation error would be","rect":[313.91973876953127,596.4581298828125,550.7699497413636,588.2826538085938]},{"page":2,"text":"to  use  larger  regions  of  support.  That  would  not  only  increase","rect":[313.91973876953127,607.4558715820313,550.8123081398011,599.2623291015625]},{"page":2,"text":"computational  complexity  and  memory  footprint,  but  it  would","rect":[313.91973876953127,618.4356079101563,550.8069491386414,610.2420654296875]},{"page":2,"text":"also lead to ringing artifacts around edges.","rect":[313.91973876953127,629.415283203125,467.16513228416445,621.2217407226563]},{"page":2,"text":"One way to evaluate computational complexity is to count","rect":[331.9194030761719,640.39501953125,550.8601456546784,632.2014770507813]},{"page":2,"text":"the number of nonzero filter coefficients within the 5×5 regions","rect":[313.91973876953127,651.3746948242188,550.8438928556442,643.18115234375]},{"page":2,"text":"of support. For Pei-Tam’s method [4], there are 9 nonzero coef-","rect":[313.91973876953127,662.3363647460938,550.8206263685227,654.160888671875]},{"page":2,"text":"ficients for the G channel, and an average of 13 each for the R","rect":[313.91973876953127,673.3341064453125,550.7935160493851,665.1405639648438]},{"page":2,"text":"and B channels. Our method has a slightly lower complexity: 9","rect":[313.91973876953127,684.3138427734375,550.8105502128601,676.1203002929688]},{"page":2,"text":"coefficients for the G channel and 11 each for R and B.","rect":[313.91973876953127,693.4817504882813,513.6214921474457,687.0999755859375]},{"page":3,"text":"Figure  2.  Filter  coefficients  for  our  proposed  linear","rect":[69.36000061035156,385.0350036621094,275.5001307630539,376.84442138671877]},{"page":3,"text":"4. PERFORMANCE","rect":[127.44000244140625,415.1603088378906,217.36849045181274,408.2364807128906]},{"page":3,"text":"We compared our proposed method to several others, using the","rect":[54.0,435.91796875,290.93871194839479,427.72442626953127]},{"page":3,"text":"Kodak image set [6], by simulating a Bayer sampling array (sim-","rect":[54.0,446.8976745605469,290.8979884290695,438.7041320800781]},{"page":3,"text":"ply  by  keeping  only  one  of  each  of  the  RGB  values  for  each","rect":[54.0,457.87738037109377,290.90436124801638,449.683837890625]},{"page":3,"text":"pixel, as in Fig. 1) and then applying the various interpolation","rect":[54.0,468.8570861816406,290.90338468551638,460.6635437011719]},{"page":3,"text":"algorithms. This subsampling approach is not really representa-","rect":[54.0,479.8368225097656,290.9115077161789,471.6432800292969]},{"page":3,"text":"tive of digital cameras, which usually employ careful lens design","rect":[54.0,490.8165283203125,290.8853793144226,482.62298583984377]},{"page":3,"text":"to  effectively  perform  a  small  amount  of  lowpass  filtering  to","rect":[54.0,501.7962341308594,290.85919523239138,493.6026916503906]},{"page":3,"text":"reduce the aliasing due to the Bayer pattern subsampling. How-","rect":[54.0,512.7759399414063,290.912514796257,504.5823974609375]},{"page":3,"text":"ever, since all papers in the references perform just subsampling,","rect":[54.0,523.7556762695313,290.9023759365082,515.5531005859375]},{"page":3,"text":"with no lowpass filtering, we did the same so we could compare","rect":[54.0,534.7354125976563,290.90257913589479,526.5418701171875]},{"page":3,"text":"results. We has also tested all interpolation methods with small","rect":[54.0,545.697021484375,290.89167031288147,537.5215454101563]},{"page":3,"text":"amounts  of  Gaussian  lowpass  filtering  before  Bayer  subsam-","rect":[54.0,556.69482421875,290.89081679821018,548.5012817382813]},{"page":3,"text":"pling,  and  found  that  the  relative  performances  of  the  methods","rect":[54.0,567.6744995117188,290.92412356853489,559.48095703125]},{"page":3,"text":"are roughly the same, with or without filtering. The improvement","rect":[54.0,578.6542358398438,290.9819718265533,570.460693359375]},{"page":3,"text":"in  peak-signal-to-noise  ratio  (PSNR)  over  bilinear  interpolation","rect":[54.0,589.6339111328125,290.8818392753601,581.4403686523438]},{"page":3,"text":"is  shown  in  Table  1.  Except  for  Freeman’s  method,  most  ap-","rect":[54.0,600.5955810546875,290.8799830579758,592.4201049804688]},{"page":3,"text":"proaches lead to more than 5 dB improvement, and our proposed","rect":[54.0,611.5752563476563,290.88348722457888,603.3997802734375]},{"page":3,"text":"method on average outperforms all others.","rect":[54.0,622.5730590820313,206.83351302146913,614.3795166015625]},{"page":3,"text":"Besides PSNR measurements, we need to verify visual qual-","rect":[71.99966430664063,633.552734375,290.985512843132,625.3591918945313]},{"page":3,"text":"ity. Fig. 3 shows the interpolated results for one of the images in","rect":[54.0,644.532470703125,290.90433073043826,636.3389282226563]},{"page":3,"text":"the  Kodak  set.  From  those  we  see  that  our  proposed  method","rect":[54.0,655.494140625,290.93487882614138,647.3186645507813]},{"page":3,"text":"leads  to  a  quality  similar  to  a  good  nonlinear  method  such  as","rect":[54.0,666.4918823242188,290.89162234783177,658.29833984375]},{"page":3,"text":"Kimmel’s  0,  but  with  a  much  lower  complexity.  Compared  to","rect":[54.0,677.4715576171875,290.85199308395388,669.2780151367188]},{"page":3,"text":"Pei-Tam linear filters, our method produces slightly less visible","rect":[54.0,688.4512939453125,290.90697366714479,680.2577514648438]},{"page":3,"text":"color fringing distortion, as well as a lower PSNR, at a slightly","rect":[54.0,699.4310302734375,290.81695890426638,691.2374877929688]},{"page":3,"text":"reduced computational complexity.","rect":[54.0,710.4107055664063,181.7498643398285,702.2171630859375]},{"page":3,"text":"Table 1. PSNR improvement in dB over bilinear inter-","rect":[330.8399963378906,651.3599243164063,531.9133387708664,643.1844482421875]},{"page":3,"text":"polation for various interpolation methods, for the first","rect":[330.8398742675781,661.9195556640625,531.9405289554596,653.7440795898438]},{"page":3,"text":"15 images in the Kodak set [6] A) Freeman [2],[5]; B)","rect":[330.8398742675781,672.497314453125,531.9404383802414,664.3037719726563]},{"page":3,"text":"Hamilton-Adams  [6],[7];  C)  Chang  et. al.  [8];  D)","rect":[330.8398742675781,683.0570068359375,531.9567347669602,674.8634643554688]},{"page":3,"text":"Kimmel 0; E) Pei-Tam [4]; F) proposed method. Data","rect":[330.8398742675781,693.5986328125,531.9341343116761,685.4231567382813]},{"page":3,"text":"in columns B–D are from Table III in [6].","rect":[330.8398742675781,704.0230712890625,481.3775956630707,695.9827880859375]}]}